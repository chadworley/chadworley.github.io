print("hi")
mean(c(1,2,3))
mean(c(1,2,3,4))
runif(100,0,1)
matrix(runif(100,0,1),nrow = 4)
matrix(runif(100,0,1),ncol = 4)
apply(matrix(runif(100,0,1),ncol = 4),1,sum)
apply(matrix(runif(100,0,1),ncol = 4),1,sum)
apply(matrix(runif(1000,0,1),ncol = 8),1,sum)
apply(matrix(runif(1000),ncol = 8),1,sum)
apply(matrix(runif(10000),ncol = 10),1,sum)
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
install.packages("sagetex")
0%%12
12%%12
1200*9/15
rev(c(3,2,1))
7%/%3
7%/%2
9%/%2
$$\theta = \arcsin\left(\frac{`r opp2`}{`r hypt`}\right)$$
0.29^2+0.35^2+0.20^2
0.69^2+0.46^2+0.55^2
quit()
24*12
8*8/2
32/3/3/3
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/get_quiz_info.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::py_last_error()
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
dbinom(0:24,24,0.14)
barchart(dbinom(0:24,24,0.14))
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
plot(0:24,dbinom(0:24,24,0.14))
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
setwd("~/Documents/chadworley.github.io/ml/arithmetic")
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
options(scipen=999)
pfix = function(c,d){
paste0("{",c,"}x^{",d,"}",collapse="+")
p = gsub("x^{0}","",p,fixed=T)
p = gsub("x^{1}","x",p,fixed=T)
p = gsub("+{-","-{",p,fixed=T)
p = gsub("+{1","+{",p,fixed=T)
p = gsub("-{1","-{",p,fixed=T)
return(p)
}
cl = sample(1:9,2)*sample(c(-1,1),2,T)
cq = sample(1:9,3)*sample(c(-1,1),3,T)
pl = pfix(cl,1:0)
options(scipen=999)
pfix = function(c,d){
p = paste0("{",c,"}x^{",d,"}",collapse="+")
p = gsub("x^{0}","",p,fixed=T)
p = gsub("x^{1}","x",p,fixed=T)
p = gsub("+{-","-{",p,fixed=T)
p = gsub("+{1","+{",p,fixed=T)
p = gsub("-{1","-{",p,fixed=T)
return(p)
}
cl = sample(1:9,2)*sample(c(-1,1),2,T)
cq = sample(1:9,3)*sample(c(-1,1),3,T)
pl = pfix(cl,1:0)
pq = pfix(cq,2:0)
options(scipen=999)
pfix = function(c,d){
p = paste0("{",c,"}x^{",d,"}",collapse="+")
p = gsub("x^{0}","",p,fixed=T)
p = gsub("x^{1}","x",p,fixed=T)
p = gsub("+{-","-{",p,fixed=T)
p = gsub("+{1}x","+x",p,fixed=T)
p = gsub("-{1}x","-x",p,fixed=T)
return(p)
}
da = 1:0
db = 2:0
ca = sample(1:9,2)*sample(c(-1,1),2,T)
cb = sample(1:9,3)*sample(c(-1,1),3,T)
pa = pfix(ca,da)
pb = pfix(cb,db)
fulllist = list()
k = 1
for(i in 1:length(da)){
for(j in 1:length(db)){
fulllist[[k]] = c(ca[i]*cb[j],da[i]+db[j])
}
}
print(fulllist)
options(scipen=999)
pfix = function(c,d){
p = paste0("{",c,"}x^{",d,"}",collapse="+")
p = gsub("x^{0}","",p,fixed=T)
p = gsub("x^{1}","x",p,fixed=T)
p = gsub("+{-","-{",p,fixed=T)
p = gsub("+{1}x","+x",p,fixed=T)
p = gsub("-{1}x","-x",p,fixed=T)
return(p)
}
da = 1:0
db = 2:0
ca = sample(1:9,2)*sample(c(-1,1),2,T)
cb = sample(1:9,3)*sample(c(-1,1),3,T)
pa = pfix(ca,da)
pb = pfix(cb,db)
fulllist = list()
k = 0
for(i in 1:length(da)){
for(j in 1:length(db)){
k = k+1
fulllist[[k]] = c(ca[i]*cb[j],da[i]+db[j])
}
}
print(fulllist)
options(scipen=999)
pfix = function(c,d){
p = paste0("{",c,"}x^{",d,"}",collapse="+")
p = gsub("x^{0}","",p,fixed=T)
p = gsub("x^{1}","x",p,fixed=T)
p = gsub("+{-","-{",p,fixed=T)
p = gsub("+{1}x","+x",p,fixed=T)
p = gsub("-{1}x","-x",p,fixed=T)
return(p)
}
while(T){
da = 1:0
db = 2:0
ca = sample(1:9,2)*sample(c(-1,1),2,T)
cb = sample(1:9,3)*sample(c(-1,1),3,T)
pa = pfix(ca,da)
pb = pfix(cb,db)
fulllist = list()
k = 0
crf = numeric()
drf = numeric()
for(i in 1:length(da)){
for(j in 1:length(db)){
k = k+1
fulllist[[k]] = c(ca[i]*cb[j],da[i]+db[j])
crf = c(crf,ca[i]*cb[j])
drf = c(drf,da[i]+db[j])
}
}
dr = rev(sort(unique(drf)))
cr = rep(0,length(dr))
for(i in 1:length(crf)){
c = crf[i]
d = drf[i]
cr[dr==d] = cr[dr==d]+c
}
prf = pfix(crf,drf)
pr = pfix(cr,dr)
if(!(0%in%cr)){break}
}
ch = sort(unique(c(0,1,-1,crf,cr,-crf,-cr)))
al1 = paste0("* ",ch,collapse="\n")
chmid = character()
for(i in ch){
if(i<0){
chmid = c(chmid,i)
} else {
chmid = c(chmid,paste0("+",i))
}
}
almid = paste0("* ",chmid,collapse="\n")
sol1 = paste0(1*(ch==cr[1]),collapse="")
sol2 = paste0(1*(ch==cr[2]),collapse="")
sol3 = paste0(1*(ch==cr[3]),collapse="")
sol4 = paste0(1*(ch==cr[4]),collapse="")
setwd("~/Documents/chadworley.github.io/a2/u05")
source("~/Documents/chadworley.github.io/a2/u05/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
c(1,2)*c(-1,1)
(1:9)[1:9!=8]
options(scipen=999)
pfix = function(c,d){
p = paste0("{",c,"}x^{",d,"}",collapse="+")
p = gsub("x^{0}","",p,fixed=T)
p = gsub("x^{1}","x",p,fixed=T)
p = gsub("+{-","-{",p,fixed=T)
p = gsub("+{1}x","+x",p,fixed=T)
p = gsub("-{1}x","-x",p,fixed=T)
return(p)
}
while(T){
cp = sample(1:8,2)*sample(c(-1,1),2,T)
a = cp[1]
b = cp[2]
cr = c(a^3,3*a^2*b,3*a*b^2,b^3)
if(max(abs(cr))<=1000 && min(abs(cr))>1){break}
}
lp = pfix(cp,c(1,0))
tqc = c(a^2,a*b,a*b,b^2)
tqp = pfix(c(a^2,a*b,a*b,b^2),c(2,1,1,0))
qc = c(a^2,2*a*b,b^2)
qp = pfix(c(a^2,2*a*b,b^2),c(2,1,0))
tcc = c(a^3,a^2*b,2*a^2*b,2*a*b^2,a*b^2,b^3)
tcp = pfix(c(a^3,a^2*b,2*a^2*b,2*a*b^2,a*b^2,b^3),c(3,2,2,1,1,0))
cc = c(a^3,3*a^2*b,3*a*b^2,b^3)
cp = pfix(c(a^3,3*a^2*b,3*a*b^2,b^3),c(3,2,1,0))
xtra = sample(2:1000,2)
ch = sort(unique(c(tqc,qc,-tqc,-qc,tcc,-tcc,cc,-cc,-xtra,xtra)))
al1 = paste0("* ",ch,collapse="\n")
chmid = character()
for(i in ch){
if(i<0){
chmid = c(chmid,i)
} else {
chmid = c(chmid,paste0("+",i))
}
}
almid = paste0("* ",chmid,collapse="\n")
sol1 = paste0(1*(ch==cr[1]),collapse="")
sol2 = paste0(1*(ch==cr[2]),collapse="")
sol3 = paste0(1*(ch==cr[3]),collapse="")
sol4 = paste0(1*(ch==cr[4]),collapse="")
source("~/Documents/chadworley.github.io/a2/u05/exams2canvas_mixed.r", echo=TRUE)
warnings()
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
setwd("~/Documents/chadworley.github.io/ml/arithmetic")
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/make_mult_table.R", echo=TRUE)
sprintf("%2d",2)
sprintf("%02d",2)
source("~/Documents/chadworley.github.io/ml/arithmetic/multiply_2digit_make_exams.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/arithmetic/exams2canvas_mixed.r", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/u05")
source("~/Documents/chadworley.github.io/a2/u05/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u05/exams2canvas_mixed.r", echo=TRUE)
floor(1234,2)
floor(1234/10,2)*10
floor(1234/10)*10
while(T){
adigs = sample(1:9,2)
bdigs = sample(1:9,4)
a = adigs[1]*10+adigs[2]
b = bdigs[1]*1000+bdigs[2]*100+bdigs[3]*10+bdigs[4]
p = a*b
p2 = p
pdigs = numeric()
ii = 1
while(p2>0){
p3 = floor(p2/10^ii)*10^ii
pdigs = c(p2-p3,pdigs)
p2 = p3
}
break
}
