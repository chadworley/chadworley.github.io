x,0,z, #6
x,y,0, #7
x,y,z) #8
p = matrix(p,ncol=3,byrow=T)
X = numeric()
Y = numeric()
for(i in 1:dim(p)[1]){
px = p[i,1]
py = p[i,2]
pz = p[i,3]
X = c(X,0.7*px-0.7*py)
Y = c(Y,0.2*px+0.2*py+pz)
}
l = c(1,2,
1,3,
1,4,
2,5,
2,6,
3,5,
3,7,
4,6,
4,7,
5,8,
6,8,
7,8)
l  = matrix(l,ncol=2,byrow=T)
XLO = min(X)
XHI = max(X)
YLO = min(Y)
YHI = max(Y)
widX = XHI-XLO
widY = YHI-YLO
maxwid = max(c(widX,widY))
xmid = mean(c(XHI,XLO))
ymid = mean(c(YHI,YLO))
plot(0,0,"n",axes=F,ann=F,
xlim=c(xmid-maxwid/2,xmid+maxwid/2),
ylim=c(ymid-maxwid/2,ymid+maxwid/2),
)
for(i in 1:dim(l)[1]){
# p1 = paste0(p[l[i,1],],collapse=",")
# p2 = paste0(p[l[i,2],],collapse=",")
# print(paste(p1," -> ",p2,collapse=""))
p1 = l[i,1]
p2 = l[i,2]
lines(c(X[p1],X[p2]),c(Y[p1],Y[p2]))
}
lines(c(X[3],X[6]),c(Y[3],Y[6]),col="red")
dtx = mean(X[c(1,3)])
dty = mean(Y[c(1,3)])
text(dtx,dty,y)
p = c(0,0,0, #1
0,0,z, #2
0,y,0, #3
x,0,0, #4
0,y,z, #5
x,0,z, #6
x,y,0, #7
x,y,z) #8
p = matrix(p,ncol=3,byrow=T)
X = numeric()
Y = numeric()
for(i in 1:dim(p)[1]){
px = p[i,1]
py = p[i,2]
pz = p[i,3]
X = c(X,0.7*px-0.7*py)
Y = c(Y,0.2*px+0.2*py+pz)
}
l = c(1,2,
1,3,
1,4,
2,5,
2,6,
3,5,
3,7,
4,6,
4,7,
5,8,
6,8,
7,8)
l  = matrix(l,ncol=2,byrow=T)
XLO = min(X)
XHI = max(X)
YLO = min(Y)
YHI = max(Y)
widX = XHI-XLO
widY = YHI-YLO
maxwid = max(c(widX,widY))
xmid = mean(c(XHI,XLO))
ymid = mean(c(YHI,YLO))
plot(0,0,"n",axes=F,ann=F,
xlim=c(xmid-maxwid/2,xmid+maxwid/2),
ylim=c(ymid-maxwid/2,ymid+maxwid/2),
)
for(i in 1:dim(l)[1]){
# p1 = paste0(p[l[i,1],],collapse=",")
# p2 = paste0(p[l[i,2],],collapse=",")
# print(paste(p1," -> ",p2,collapse=""))
p1 = l[i,1]
p2 = l[i,2]
lines(c(X[p1],X[p2]),c(Y[p1],Y[p2]))
}
lines(c(X[3],X[6]),c(Y[3],Y[6]),col="red")
dtx = mean(X[c(1,3)])
dty = mean(Y[c(1,3)])
text(dtx,dty,y)
htx = mean(X[c(1,2)])
hty = mean(Y[c(1,2)])
text(htx,hty,z)
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,
xlim=c(xmid-maxwid/2,xmid+maxwid/2),
ylim=c(ymid-maxwid/2,ymid+maxwid/2),
)
for(i in 1:dim(l)[1]){
# p1 = paste0(p[l[i,1],],collapse=",")
# p2 = paste0(p[l[i,2],],collapse=",")
# print(paste(p1," -> ",p2,collapse=""))
p1 = l[i,1]
p2 = l[i,2]
lines(c(X[p1],X[p2]),c(Y[p1],Y[p2]),col="darkgrey")
}
lines(c(X[3],X[6]),c(Y[3],Y[6]),col=rgb(1,0.6,0.6,0.2),lwd=2)
dtx = mean(X[c(1,3)])
dty = mean(Y[c(1,3)])
text(dtx,dty,y,col="blue")
# htx = mean(X[c(1,2)])
# hty = mean(Y[c(1,2)])
# text(htx,hty,z,col="blue")
ltx = mean(X[c(1,4)])
lty = mean(Y[c(1,4)])
text(ltx,lty,x,col="blue")
Dtx = mean(X[c(3,6)])
Dty = mean(Y[c(3,6)])
text(Dtx,Dty,"?",col=rgb(1,0,0,0.2),cex=1.3)
lines(c(X[3],X[4]),c(Y[3],Y[4]),col=rgb(0.6,0.6,0,0.4),lwd=2)
btx = mean(X[c(3,4)])
bty = mean(Y[c(3,4)])
text(btx,bty,"B",col=rgb(0.1,0.1,0))
lines(c(dtx/10,ltx/10,ltx/10),c(dty/10,dty/10,lty/10))
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,
xlim=c(xmid-maxwid/2,xmid+maxwid/2),
ylim=c(ymid-maxwid/2,ymid+maxwid/2),
)
for(i in 1:dim(l)[1]){
# p1 = paste0(p[l[i,1],],collapse=",")
# p2 = paste0(p[l[i,2],],collapse=",")
# print(paste(p1," -> ",p2,collapse=""))
p1 = l[i,1]
p2 = l[i,2]
lines(c(X[p1],X[p2]),c(Y[p1],Y[p2]),col="darkgrey")
}
lines(c(X[3],X[6]),c(Y[3],Y[6]),col=rgb(1,0.6,0.6,0.2),lwd=2)
dtx = mean(X[c(1,3)])
dty = mean(Y[c(1,3)])
text(dtx,dty,y,col="blue")
# htx = mean(X[c(1,2)])
# hty = mean(Y[c(1,2)])
# text(htx,hty,z,col="blue")
ltx = mean(X[c(1,4)])
lty = mean(Y[c(1,4)])
text(ltx,lty,x,col="blue")
Dtx = mean(X[c(3,6)])
Dty = mean(Y[c(3,6)])
text(Dtx,Dty,"?",col=rgb(1,0,0,0.2),cex=1.3)
lines(c(X[3],X[4]),c(Y[3],Y[4]),col=rgb(0.6,0.6,0,0.4),lwd=2)
btx = mean(X[c(3,4)])
bty = mean(Y[c(3,4)])
text(btx,bty,"B",col=rgb(0.1,0.1,0))
px1 = c(0,1,1)
py1 = c(1,1,0)
pz1 = c(0,0,0)
X1 = 0.7*px1-0.7*py1
Y1 = 0.2*px1+0.2*py1+pz1
lines(X1,Y1)
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,
xlim=c(xmid-maxwid/2,xmid+maxwid/2),
ylim=c(ymid-maxwid/2,ymid+maxwid/2),
)
for(i in 1:dim(l)[1]){
# p1 = paste0(p[l[i,1],],collapse=",")
# p2 = paste0(p[l[i,2],],collapse=",")
# print(paste(p1," -> ",p2,collapse=""))
p1 = l[i,1]
p2 = l[i,2]
lines(c(X[p1],X[p2]),c(Y[p1],Y[p2]),col="darkgrey")
}
lines(c(X[3],X[6]),c(Y[3],Y[6]),col=rgb(1,0.6,0.6,0.2),lwd=2)
dtx = mean(X[c(1,3)])
dty = mean(Y[c(1,3)])
text(dtx,dty,y,col="blue")
# htx = mean(X[c(1,2)])
# hty = mean(Y[c(1,2)])
# text(htx,hty,z,col="blue")
ltx = mean(X[c(1,4)])
lty = mean(Y[c(1,4)])
text(ltx,lty,x,col="blue")
Dtx = mean(X[c(3,6)])
Dty = mean(Y[c(3,6)])
text(Dtx,Dty,"?",col=rgb(1,0,0,0.2),cex=1.3)
polygon(X[c(1,3,4)],Y[c(1,3,4)],col=rgb(0.8,0.8,0,0.8),border=NA)
lines(c(X[3],X[4]),c(Y[3],Y[4]),col=rgb(0.6,0.6,0,0.4),lwd=2)
btx = mean(X[c(3,4)])
bty = mean(Y[c(3,4)])
text(btx,bty,"B",col=rgb(0.1,0.1,0))
px1 = c(0,1,1)/2
py1 = c(1,1,0)/2
pz1 = c(0,0,0)/2
X1 = 0.7*px1-0.7*py1
Y1 = 0.2*px1+0.2*py1+pz1
lines(X1,Y1)
library(latex2exp)
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,
xlim=c(xmid-maxwid/2,xmid+maxwid/2),
ylim=c(ymid-maxwid/2,ymid+maxwid/2),
)
for(i in 1:dim(l)[1]){
# p1 = paste0(p[l[i,1],],collapse=",")
# p2 = paste0(p[l[i,2],],collapse=",")
# print(paste(p1," -> ",p2,collapse=""))
p1 = l[i,1]
p2 = l[i,2]
lines(c(X[p1],X[p2]),c(Y[p1],Y[p2]),col="darkgrey")
}
polygon(X[c(3,4,6)],Y[c(3,4,6)],col=rgb(1,0,0,0.3))
lines(c(X[3],X[6]),c(Y[3],Y[6]),col=rgb(1,0.6,0.6,0.2),lwd=2)
# dtx = mean(X[c(1,3)])
# dty = mean(Y[c(1,3)])
# text(dtx,dty,y,col="blue")
htx = mean(X[c(4,6)])
hty = mean(Y[c(4,6)])
text(htx,hty,z,col="blue")
# ltx = mean(X[c(1,4)])
# lty = mean(Y[c(1,4)])
# text(ltx,lty,x,col="blue")
Dtx = mean(X[c(3,6)])
Dty = mean(Y[c(3,6)])
text(Dtx,Dty,"D",col=rgb(1,0,0,0.2),cex=1.3)
lines(c(X[3],X[4]),c(Y[3],Y[4]),col=rgb(0.6,0.6,0,0.4),lwd=2)
btx = mean(X[c(3,4)])
bty = mean(Y[c(3,4)])
text(btx,bty,TeX(paste0("$\\sqrt{",x^2+y^2,"}$")),col=rgb(0.1,0.1,0))
px1 = c(0,1,1)/2
py1 = c(1,1,0)/2
pz1 = c(0,0,0)/2
X1 = 0.7*px1-0.7*py1
Y1 = 0.2*px1+0.2*py1+pz1
lines(X1,Y1)
slopes = list(c(1,2),c(1,3),c(1,4),c(1,5),c(1,6),
c(2,3),c(2,5),c(3,4),c(3,5),c(4,5),c(5,6))
wi = sample(1:length(slopes),1)
print(wi)
slope = sample(slopes[wi])*c(sample(c(-1,1),1),1)
par(pty="s",mar=c(4,4,1,1))
plot(0,0,"n",xlim=c(0,100),ylim=c(0,100),xlab="x",ylab="y")
lines(c(x1,x2),c(y1,y2))
min(5,3)
min(5,3,4)
source("~/Documents/chadworley.github.io/a2/u11/exams2html_interactive.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u11/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u11/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
for(i in 1:nl){
lines(c(lbx,ubx),c(yls[i],yls[i]),col=rgb(0,0,0,0.1),lwd=0.5)
lines(c(xls[i],xls[i]),c(lby,uby),col=rgb(0,0,0,0.1),lwd=0.5)
}
log(55)/log(10)
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
library(reticulate)
solty = sample(1:3,1,FALSE,c(0.1,0.8,0.1))
while(T){
ints = sample(c(1:20),4)
xi1 = ints[1]
xi2 = ints[2]
yi1 = ints[3]
yi2 = ints[4]
vx = round(runif(1,1,10),2)
vy = round(runif(1,1,10),2)
c = abs(xi1*yi1)
f = abs(xi2*yi2)
a = c/xi1
b = c/yi1
d = f/xi2
e = f/yi2
x = (c*e-b*f)/(a*e-b*d)
y = (c*d-a*f)/(b*d-a*e)
prof1 = sum(c(0,min(yi1,yi2))*c(vx,vy))
prof2 = sum(c(x,y)*c(vx,vy))
prof3 = sum(c(min(xi1,xi2),0)*c(vx,vy))
if(length(unique(c(prof1,prof2,prof3)))==3 &&
min(abs(diff(c(prof1,prof2,prof3,prof1)))) > 1 &&
c(prof1,prof2,prof3)[solty]==max(c(prof1,prof2,prof3)) &&
round(x)==x &&
round(y)==y &&
x<20 &&
y<20 &&
x>0 &&
y>0 && x!=y){break}
}
x = round(x)
y = round(y)
al = 0:20
als = paste0("* ",al,"\n",collapse="")
ans = max(c(prof1,prof2,prof3))
reticulate::repl_python()
a = py$a
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
y2 = (-d/e)*xx+f/e
lines(xx,y1,col="blue",lwd=1)
lines(xx,y2,col="red",lwd=1)
points(c(0,x,min(xi1,xi2)),c(min(yi1,yi2),y,0))
# P(x,y)=vx*x+vy*y
maxpro = ans
mpdigs = ceiling(log(maxpro)/log(10))
ld = floor(maxpro/10^(mpdigs-1))
print(ld)
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
y2 = (-d/e)*xx+f/e
lines(xx,y1,col="blue",lwd=1)
lines(xx,y2,col="red",lwd=1)
points(c(0,x,min(xi1,xi2)),c(min(yi1,yi2),y,0))
# P(x,y)=vx*x+vy*y
maxpro = ans
mpdigs = ceiling(log(maxpro)/log(10))
ld = floor(maxpro/10^(mpdigs-1))
pfs = seq(ld*10^(mpdigs-2),ld*10^(mpdigs-1),ld*10^(mpdigs-2))
print(pfs)
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
y2 = (-d/e)*xx+f/e
lines(xx,y1,col="blue",lwd=1)
lines(xx,y2,col="red",lwd=1)
points(c(0,x,min(xi1,xi2)),c(min(yi1,yi2),y,0))
# P(x,y)=vx*x+vy*y
maxpro = ans
mpdigs = ceiling(log(maxpro)/log(10))
ld = floor(maxpro/10^(mpdigs-1))
pfs = seq(10^(mpdigs-2),ld*10^(mpdigs-1),10^(mpdigs-2))
print(pfs)
pfs = seq(10^(mpdigs-1),ld*10^(mpdigs-1),10^(mpdigs-2))
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
y2 = (-d/e)*xx+f/e
lines(xx,y1,col="blue",lwd=1)
lines(xx,y2,col="red",lwd=1)
points(c(0,x,min(xi1,xi2)),c(min(yi1,yi2),y,0))
# P(x,y)=vx*x+vy*y
maxpro = ans
mpdigs = ceiling(log(maxpro)/log(10))
ld = floor(maxpro/10^(mpdigs-1))
pfs = seq(10^(mpdigs-1),ld*10^(mpdigs-1),10^(mpdigs-2))
print(pfs)
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
y2 = (-d/e)*xx+f/e
lines(xx,y1,col="blue",lwd=1)
lines(xx,y2,col="red",lwd=1)
points(c(0,x,min(xi1,xi2)),c(min(yi1,yi2),y,0))
# P(x,y)=vx*x+vy*y
maxpro = ans
mpdigs = ceiling(log(maxpro)/log(10))
ld = floor(maxpro/10^(mpdigs-1))
pfs = seq(10^(mpdigs-1),ld*10^(mpdigs-1),10^(mpdigs-1))
print(pfs)
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
y2 = (-d/e)*xx+f/e
lines(xx,y1,col="blue",lwd=1)
lines(xx,y2,col="red",lwd=1)
points(c(0,x,min(xi1,xi2)),c(min(yi1,yi2),y,0))
# P(x,y)=vx*x+vy*y
maxpro = ans
mpdigs = ceiling(log(maxpro)/log(10))
ld = floor(maxpro/10^(mpdigs-1))
pfs = seq(10^(mpdigs-1),ld*10^(mpdigs-1),10^(mpdigs-1))
if(length(pfs)<6){
pfs = seq(10^(mpdigs-2),ld*10^(mpdigs-1),10^(mpdigs-2))
}
print(pfs)
library(latex2exp)
par(pty="s")
plot(0,0,type="n",xlim=c(0,20),ylim=c(0,20),lwd=2,ylab=TeX("$y$"),xlab=TeX("$x$"))
for(j in seq(0,20,1)){
abline(h=j,lty=3)
abline(v=j,lty=3)
}
abline(h=0,lwd=2)
abline(v=0,lwd=2)
xx = seq(-1,21,1)
y1 = (-a/b)*xx+c/b
y2 = (-d/e)*xx+f/e
lines(xx,y1,col="blue",lwd=1)
lines(xx,y2,col="red",lwd=1)
points(c(0,x,min(xi1,xi2)),c(min(yi1,yi2),y,0))
# P(x,y)=vx*x+vy*y
maxpro = ans
mpdigs = ceiling(log(maxpro)/log(10))
ld = floor(maxpro/10^(mpdigs-1))
pfs = seq(10^(mpdigs-1),ld*10^(mpdigs-1),10^(mpdigs-1))
if(length(pfs)<4){
pfs = seq(10^(mpdigs-2),ld*10^(mpdigs-1),10^(mpdigs-2))
}
print(pfs)
library(reticulate)
solty = sample(1:3,1,FALSE,c(0.1,0.8,0.1))
while(T){
ints = sample(c(1:20),4)
xi1 = ints[1]
xi2 = ints[2]
yi1 = ints[3]
yi2 = ints[4]
vx = round(runif(1,1,10),2)
vy = round(runif(1,1,10),2)
c = abs(xi1*yi1)
f = abs(xi2*yi2)
a = c/xi1
b = c/yi1
d = f/xi2
e = f/yi2
x = (c*e-b*f)/(a*e-b*d)
y = (c*d-a*f)/(b*d-a*e)
prof1 = sum(c(0,min(yi1,yi2))*c(vx,vy))
prof2 = sum(c(x,y)*c(vx,vy))
prof3 = sum(c(min(xi1,xi2),0)*c(vx,vy))
if(length(unique(c(prof1,prof2,prof3)))==3 &&
min(abs(diff(c(prof1,prof2,prof3,prof1)))) > 1 &&
c(prof1,prof2,prof3)[solty]==max(c(prof1,prof2,prof3)) &&
round(x)==x &&
round(y)==y &&
x<20 &&
y<20 &&
x>0 &&
y>0 && x!=y){break}
}
x = round(x)
y = round(y)
al = 0:20
als = paste0("* ",al,"\n",collapse="")
ans = max(c(prof1,prof2,prof3))
reticulate::repl_python()
