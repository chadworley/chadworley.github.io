while(T){
X = sort(sort(sample(1:9,4))*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sort(sample(1:9,4))*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(unique(X))>3 & sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(length(sum(X<0)<2 ){
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X<0)<2 ){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(1:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
if(sum(X*P)==0){
break
}
}
print(P)
print(X)
c(1,2,3,4).paste(sep=",")
paste(1:3,sep=",")
paste0(1:3,sep=",")
?paste
paste0(1:3,collapse=",")
paste(1:3,collapse=",")
answerlist(c("Typical","Outlandish"), markup = "markdown")
while(T){
X = sort(sample(0:9,4)*c(1,1,1,-1))
P = sample(1:4)/10
mu = sum(X*P)
sig = sqrt(sum(P*(X-mu)^2))
n = 25
ET = mu*n
SET = sig*sqrt(n)
if(sum(X*P)==0){
break
}
}
X2 = as.character(X)
P2 = as.character(P)
X3 = paste0(X2,sep="",collapse='*')
P3 = paste0(P2,sep="",collapse='*')
zlo = 0
zhi = 0
totlo = 0
tothi = 0
while(zlo==0 && zhi==0){
tottemp = sum(sample(X,25,T))
ztemp = (tottemp-ET)/SET
if(ztemp>1 && ztemp<2){
zlo = ztemp
totlo = tottemp
}
if(ztemp>3 && ztemp<4){
zhi = ztemp
tothi = tottemp
}
}
choice = sample(0:1,1)
tot = c(totlo,tothi)[choice]
z = c(zlo,zhi)[choice]
html = paste0("https://chadworley.github.io/cltsim.html?poss=",X3,"&wght=",P3)
setwd("~/Documents/chadworley.github.io/precalculus/unit_01_stats/002_practice")
source("~/Documents/chadworley.github.io/precalculus/unit_01_stats/002_practice/exams2canvas_simp.r", echo=TRUE)
source("~/Documents/chadworley.github.io/precalculus/unit_01_stats/002_practice/exams2canvas_simp.r", echo=TRUE)
source("~/Documents/chadworley.github.io/precalculus/unit_01_stats/002_practice/exams2canvas_simp.r", echo=TRUE)
source("~/Documents/chadworley.github.io/precalculus/unit_01_stats/002_practice/exams2canvas_simp.r", echo=TRUE)
source("~/Documents/chadworley.github.io/precalculus/unit_01_stats/002_practice/exams2canvas_simp.r", echo=TRUE)
