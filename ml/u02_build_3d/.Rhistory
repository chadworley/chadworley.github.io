print("hi")
mean(c(1,2,3))
mean(c(1,2,3,4))
runif(100,0,1)
matrix(runif(100,0,1),nrow = 4)
matrix(runif(100,0,1),ncol = 4)
apply(matrix(runif(100,0,1),ncol = 4),1,sum)
apply(matrix(runif(100,0,1),ncol = 4),1,sum)
apply(matrix(runif(1000,0,1),ncol = 8),1,sum)
apply(matrix(runif(1000),ncol = 8),1,sum)
apply(matrix(runif(10000),ncol = 10),1,sum)
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
hist(apply(matrix(runif(10000),ncol = 10),1,sum))
install.packages("sagetex")
0%%12
12%%12
1200*9/15
rev(c(3,2,1))
7%/%3
7%/%2
9%/%2
$$\theta = \arcsin\left(\frac{`r opp2`}{`r hypt`}\right)$$
0.29^2+0.35^2+0.20^2
0.69^2+0.46^2+0.55^2
quit()
24*12
8*8/2
32/3/3/3
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/get_quiz_info.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::py_last_error()
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
dbinom(0:24,24,0.14)
barchart(dbinom(0:24,24,0.14))
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
plot(0:24,dbinom(0:24,24,0.14))
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_ET_data.py')
?sprintf
a = c("hi",2,3)
a
knitr::opts_chunk$set(echo = F)
options(scipen=999)
cols = c("red","yellow","orange","green","blue","purple")
feats = c("backed","bellied","crested","legged","footed","headed","capped","eyed","toed","tailed")
birds = c("woodpecker","chickadee","egret","eagle","sparrow","jay","vulture","heron","warbler",
"pigeon","hawk","falcon")
col = sample(cols,1)
feat = sample(feats,1)
bird = sample(birds,1)
bn = paste0(col,"-",feat," ",bird,collapse="")
bns = paste0(col,"-",feat," ",bird,"s",collapse="")
while(T){
mu = round(runif(1,11,99),2)
sig = round(runif(1,mu/20,mu/4),2)
n = sample(5:12,1)
x = round(rnorm(n,mu,sig),1)
xbar = mean(x)
s = sd(x)
SE = s/sqrt(1)
xbarlo = floor(xbar*100)/100
xbarhi = ceiling(xbar*100)/100
siglo = floor(sig*100)/100
sighi = ceiling(sig*100)/100
P = runif(1,0.1,0.7)
maxzlo = qnorm(pnorm(2)-P)
minzlo = -2
z1 = runif(1,minzlo,maxzlo)
z2 = qnorm(pnorm(z1)+P)
b1 = round(xbar+SE*z1,1)
b2 = round(xbar+SE*z2,1)
z1 = (b1-xbar)/SE
z2 = (b2-xbar)/SE
p = pnorm(z2)-pnorm(z1)
lowp = p
hip = p
for(xb in c(xbarhi,xbarlo,xbar)){
for(si in c(sig,siglo,sighi)){
zz1 = (b1-xb)/si
zz2 = (b2-xb)/si
pp = pnorm(zz2)-pnorm(zz1)
pplo = floor(pp*10000)/10000
pphi = ceiling(pp*10000)/10000
if(lowp>pplo){lowp=pplo}
if(hip<pphi){hip=pphi}
}
}
tol = max((hip-lowp)/2,0.005)
mid = (hip+lowp)/2
if(tol<0.01){break}
}
opts <- options(knitr.kable.NA = "")
mydf = data.frame(matrix(sprintf("%.1f",x),ncol = 1))
colnames(mydf) = rep("Length (cm)")
knitr::kable(mydf,format="html", align = "c",row.names=F,table.attr='class="bordered-table"')
par(mar=c(7,3,0,0))
library(latex2exp)
mu = round(xbar,3)
sig = round(s,3)
rv = "X"
zr = (b1-xbar)/s
Z = seq(-3,3,0.001)
plot(Z,dnorm(Z),type="l",xlim=c(-3,3),ylim=c(0,0.4),xlab="Z",ylab="density",axes=F,ann=F,lwd=3)
axis(1,at=round(seq(-3,3,1),1),line=0)
mtext("Z axis",1,0,at=-3.5)
axis(1,at=round(seq(-3,3,1),1),labels=signif(seq(mu-3*sig,mu+3*sig,length.out=7),4),line=3)
mtext(paste(rv,"axis",collapse=""),1,3,at=-3.5)
abline(h=seq(0,0.4,0.05))
for(zz in seq(-3,3,0.2)){
lines(c(zz,zz),c(0,0.4))
}
abline(h=0,lwd=3)
if(!(zr %in% seq(-3,3,1))){
axis(1,at=zr,labels="",line=3)
mtext(b1,1,4.9,at=zr)
}
polygon(c(Z[Z<=zr],zr,-3),c(dnorm(Z[Z<=zr]),0,0),col=rgb(1,0.5,0.5,0.5))
mtext("density",2,line=1)
text(max((-3+zr)/2,-2),0.2,round(pnorm(b1,xbar,s),4),col="red",cex=3)
par(mar=c(7,3,0,0))
library(latex2exp)
mu = round(xbar,3)
sig = round(s,3)
rv = "X"
zr = (b2-xbar)/s
Z = seq(-3,3,0.001)
plot(Z,dnorm(Z),type="l",xlim=c(-3,3),ylim=c(0,0.4),xlab="Z",ylab="density",axes=F,ann=F,lwd=3)
axis(1,at=round(seq(-3,3,1),2),line=0)
mtext("Z axis",1,0,at=-3.5)
axis(1,at=round(seq(-3,3,1),2),labels=signif(seq(mu-3*sig,mu+3*sig,length.out=7),4),line=3)
mtext(paste(rv,"axis",collapse=""),1,3,at=-3.5)
abline(h=seq(0,0.4,0.05))
for(zz in seq(-3,3,0.2)){
lines(c(zz,zz),c(0,0.4))
}
abline(h=0,lwd=3)
if(!(zr %in% seq(-3,3,1))){
axis(1,at=zr,labels="",line=3)
mtext(b2,1,4.9,at=zr)
}
polygon(c(Z[Z<=zr],zr,-3),c(dnorm(Z[Z<=zr]),0,0),col=rgb(0.5,0.5,1,0.5))
mtext("density",2,line=1)
text(max((-3+zr)/2,-2),0.2,round(pnorm(b2,xbar,s),4),col="blue",cex=3)
par(mar=c(7,3,0,0))
library(latex2exp)
Z = seq(-3,3,0.001)
plot(Z,dnorm(Z),type="l",xlim=c(-3,3),ylim=c(0,0.4),xlab="Z",ylab="density",axes=F,ann=F,lwd=3)
axis(1,at=round(seq(-3,3,1),1),line=0)
mtext("Z axis",1,0,at=-3.5)
axis(1,at=round(seq(-3,3,1),1),labels=signif(seq(mu-3*sig,mu+3*sig,length.out=7),4),line=3)
mtext(paste(rv,"axis",collapse=""),1,3,at=-3.5)
abline(h=seq(0,0.4,0.05))
for(zz in seq(-3,3,0.2)){
lines(c(zz,zz),c(0,0.4))
}
abline(h=0,lwd=3)
axis(1,at=c(z1,z2),labels=c("",""),line=3)
mtext(b1,1,4.9,at=z1)
mtext(b2,1,4.9,at=z2)
polygon(c(Z[Z>=z1 & Z<=z2],z2,z1),c(dnorm(Z[Z>=z1 & Z<=z2]),0,0),col=rgb(1,0.5,1,0.5))
text((z1+z2)/2,0.2,round(pnorm(b2,xbar,s),4)-round(pnorm(b1,xbar,s),4),col="purple",cex=3)
mtext("density",2,line=1)
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1",b1," ","b2",b2)
mydf = data.frame(A,B,C)
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1",b1," ","b2",b2,rep(" ",N-5))
mydf = data.frame(A,B,C)
print(mydf)
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1 (lower boundary)",b1," ","b2 (upper boundary)",b2,rep(" ",N-5))
D = c("P(X<b1)","=NORM.DIST(C2,B2,B5)"," ","P(X<b2)","=NORM.DIST(C5,B2,B5)",rep(" ",N-5))
mydf = data.frame(A,B,C,D)
print(mydf,row.names = 1:N)
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1 (lower boundary)",b1," ","b2 (upper boundary)",b2,rep(" ",N-5))
D = c("P(X<b1)","=NORM.DIST(C2,B2,B5)"," ","P(X<b2)","=NORM.DIST(C5,B2,B5)",rep(" ",N-5))
mydf = data.frame(A,B,C,D)
knitr::kable(mydf, format = "html")
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1 (lower boundary)",b1," ","b2 (upper boundary)",b2,rep(" ",N-5))
D = c("P(X<b1)","=NORM.DIST(C2,B2,B5)"," ","P(X<b2)","=NORM.DIST(C5,B2,B5)",rep(" ",N-5))
mydf = data.frame(A,B,C,D)
knitr::kable(mydf, format = "html",row.names = 1:N)
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1 (lower boundary)",b1," ","b2 (upper boundary)",b2,rep(" ",N-5))
D = c("P(X<b1)","=NORM.DIST(C2,B2,B5)"," ","P(X<b2)","=NORM.DIST(C5,B2,B5)",rep(" ",N-5))
mydf = data.frame(A,B,C,D)
knitr::kable(mydf, format = "html",row.names = T)
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1 (lower boundary)",b1," ","b2 (upper boundary)",b2,rep(" ",N-5))
D = c("P(X<b1)","=NORM.DIST(C2,B2,B5,TRUE)"," ","P(X<b2)","=NORM.DIST(C5,B2,B5,TRUE)",rep(" ",N-5))
E = c("P(b1<X<b2)","=D5-D2")
mydf = data.frame(A,B,C,D,E)
knitr::kable(mydf, format = "html",row.names = T,table.attr='class="ss-table"')
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b1 (lower boundary)",b1," ","b2 (upper boundary)",b2,rep(" ",N-5))
D = c("P(X<b1)","=NORM.DIST(C2,B2,B5,TRUE)"," ","P(X<b2)","=NORM.DIST(C5,B2,B5,TRUE)",rep(" ",N-5))
E = c("P(b1<X<b2)","=D5-D2",rep(" ",N-2))
mydf = data.frame(A,B,C,D,E)
knitr::kable(mydf, format = "html",row.names = T,table.attr='class="ss-table"')
knitr::opts_chunk$set(echo = F)
options(scipen=999)
cols = c("red","yellow","orange","green","blue","purple")
feats = c("backed","bellied","crested","legged","footed","headed","capped","eyed","toed","tailed")
birds = c("woodpecker","chickadee","egret","eagle","sparrow","jay","vulture","heron","warbler",
"pigeon","hawk","falcon")
col = sample(cols,1)
feat = sample(feats,1)
bird = sample(birds,1)
bn = paste0(col,"-",feat," ",bird,collapse="")
bns = paste0(col,"-",feat," ",bird,"s",collapse="")
while(T){
mu = round(runif(1,11,99),2)
sig = round(runif(1,mu/20,mu/4),2)
n = sample(5:12,1)
x = round(rnorm(n,mu,sig),1)
xbar = mean(x)
s = sd(x)
xbarlo = floor(xbar*100)/100
xbarhi = ceiling(xbar*100)/100
slo = floor(s*100)/100
shi = ceiling(s*100)/100
z = runif(1,-2.5,2.5)
b = round(xbar+s*z,1)
z = (b-xbar)/s
p = pnorm(z)
lowp = p
hip = p
for(xb in c(xbarhi,xbarlo,xbar)){
for(si in c(s,slo,shi)){
zz = (b-xb)/si
pp = pnorm(zz)
pplo = floor(pp*1000)/1000
pphi = ceiling(pp*1000)/1000
if(lowp>pplo){lowp=pplo}
if(hip<pphi){hip=pphi}
}
}
tol = max((hip-lowp)/2,0.01)
mid = (hip+lowp)/2
if(tol<0.03){break}
}
N = n+1
A = c("length (cm)",sprintf("%.2f",x))
B = c("xbar (sample mean)","=AVERAGE(A:A)"," ","s (sample standard deviation)","=STDEV(A:A)",rep(" ",N-5))
C = c("b (boundary)",b," "," "," ",rep(" ",N-5))
D = c("P(X<b1)","=NORM.DIST(C2,B2,B5,TRUE)",rep(" ",N-2))
mydf = data.frame(A,B,C,D)
knitr::kable(mydf, format = "html",row.names = T,table.attr='class="ss-table"')
setwd("~/Documents/chadworley.github.io/a2/u03")
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/u03/outcanvas")
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
setwd("~/Documents/chadworley.github.io/a2/u03")
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
setwd("~/Documents/chadworley.github.io/a2/u03")
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u03/exams2canvas_mixed.r", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/u03/outcanvas")
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
setwd("~/Documents/chadworley.github.io/a2/u03")
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
setwd("~/Documents/chadworley.github.io/ml/u02_build_3d")
knitr::include_graphics("CW.png")
LETTERS
PASTE0(LETTERS)
paste0(LETTERS)
paste0(LETTERS,collapse=" ")
