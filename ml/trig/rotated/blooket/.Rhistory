arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
text(1.1,1.1,"I",font=2)
text(-1.1,1.1,"II")
text(-1.1,-1.1,"III")
text(1.1,-1.1,"IV")
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
windowsFonts(A = windowsFont("Times New Roman"))
?font_import
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
library(extrafont)
font_import()
loadfonts()
text(1.1,1.1,"I")
text(-1.1,1.1,"II")
text(-1.1,-1.1,"III")
text(1.1,-1.1,"IV")
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
library(extrafont)
# font_import()
loadfonts()
text(1.1,1.1,"I",family="mono")
text(-1.1,1.1,"II")
text(-1.1,-1.1,"III")
text(1.1,-1.1,"IV")
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
library(extrafont)
# font_import()
# loadfonts()
text(1.1,1.1,"I",family="mono",font=2)
text(-1.1,1.1,"II")
text(-1.1,-1.1,"III")
text(1.1,-1.1,"IV")
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
# library(extrafont)
# font_import()
# loadfonts()
text(1.1,1.1,"I",family="times",font=2)
text(-1.1,1.1,"II",family="mono",font=2)
text(-1.1,-1.1,"III",family="mono",font=2)
text(1.1,-1.1,"IV",family="mono",font=2)
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
# library(extrafont)
# font_import()
# loadfonts()
text(1.1,1.1,"I",family="roman",font=2)
text(-1.1,1.1,"II",family="times",font=2)
text(-1.1,-1.1,"III",family="times",font=2)
text(1.1,-1.1,"IV",family="times",font=2)
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
?family
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
# library(extrafont)
# font_import()
# loadfonts()
text(1.1,1.1,"I",family="serif",font=2)
text(-1.1,1.1,"II",family="times",font=2)
text(-1.1,-1.1,"III",family="times",font=2)
text(1.1,-1.1,"IV",family="times",font=2)
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
th = seq(0,2*pi,pi/360)
lines(cos(th),sin(th),col="red")
if(kn==1){
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
} else {
abline(h=y,lty=2,col="blue")
text(1.05*sign(-x),y,paste0("y=",round(y,5),collapse=""),adj=c(0.5,1.3),srt=0,col="blue")
}
# library(extrafont)
# font_import()
# loadfonts()
text(1.1,1.1,"I",family="serif",font=1)
text(-1.1,1.1,"II",family="times",font=2)
text(-1.1,-1.1,"III",family="times",font=2)
text(1.1,-1.1,"IV",family="times",font=2)
points(x,y,pch=20,col="purple",cex=2)
text(x,y,paste0("(",round(x,4),", ",round(y,4),")"),col="purple",adj=c(0.5+0.6*sign(x),0.5+sign(y)),cex=1.2)
np = c("negative","positive")
npx = np[round(sign(x)/2+1.5)]
npy = np[round(sign(y)/2+1.5)]
extrafont::fonts()
par(mar=c(0,0,0,0))
fnts = extrafont::fonts()
n = length(fnts)
plot(0,0,"n",axes=F,ann=F,xlim=c(-1,1),ylim=c(0,-n))
for(i in 1:n){
fnt = fnts[i]
text(0,-i,paste0(fnt),family=fnt)
}
par(mar=c(0,0,0,0))
fnts = extrafont::fonts()
n = length(fnts)
plot(0,0,"n",axes=F,ann=F,xlim=c(-1,1),ylim=c(0,-n))
for(i in 1:n){
fnt = fnts[i]
text(0,-i,paste0(fnt),font.name=fnt)
}
par(mar=c(0,0,0,0))
fnts = extrafont::fonts()
n = length(fnts)
plot(0,0,"n",axes=F,ann=F,xlim=c(-1,1),ylim=c(-n,0))
for(i in 1:n){
fnt = fnts[i]
text(0,-i,paste0(fnt))
}
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
?sprintf
source("~/Documents/chadworley.github.io/a2/blooket/RTT/make_triags.R", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/blooket/RTT")
source("~/Documents/chadworley.github.io/a2/blooket/RTT/make_triags.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/make_triags.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/blooket/RTT/basic_triag.R", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/u13")
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
setwd("~/Documents/chadworley.github.io/ml/trig")
source("~/Documents/chadworley.github.io/ml/trig/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/ml/tools/upload_QTI_zip.py')
source("~/Documents/chadworley.github.io/ml/trig/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/ml/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/u13/minimastery/selenium_test.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/u13/minimastery/selenium_test_2.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/u13/minimastery/selenium_test_2.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/u13/minimastery/selenium_test_2.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/u13/minimastery/selenium_test_2.py')
setwd("~/Documents/chadworley.github.io/a2/u13/minimastery")
source("~/Documents/chadworley.github.io/a2/u13/minimastery/exams2canvas_mixed.r", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/u13")
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
setwd("~/Documents/chadworley.github.io/ml/trig/rotated")
source("~/Documents/chadworley.github.io/ml/trig/rotated/exams2canvas_mixed.r", echo=TRUE)
8%%(pi/2)
8%/%(pi/2)
library(latex2exp)
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))
arrows(-1.2,0,1.2,0,0.1,20,3,lwd=2,col="grey")
arrows(0,-1.2,0,1.2,0.1,20,3,lwd=2,col="grey")
thall = seq(0,2*pi,pi/360)
lines(cos(thall),sin(thall),col="black",lty=3)
abline(v=x,lty=2,col="blue")
text(x,-1.05*sign(y),paste0("x=",round(x,5),collapse=""),adj=c(0.5,-0.3),srt=90,col="blue")
thth = seq(0,th,pi/360)
source("~/.active-rstudio-document", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/ET2")
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
setwd("~/Documents/chadworley.github.io/a2/ET2")
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/u13/circ_coords")
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/circ_coords/circ_graph.R", echo=TRUE)
setwd("~/Documents/chadworley.github.io/a2/u13")
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
par(mar=c(0,0,0,0),pty="s")
plot(0,0,"n",axes=F,ann=F,xlim=c(0,1),ylim=c(0,1))
th = seq(0,pi/2,pi/360)
arrows(-0.05,0,1.05,0,0.05,15)
lines(cos(th),sin(th),col="grey",lty=2)
x = 0.8
y = 0.6
t = atan(y/x)
polygon(c(0,x,x),c(0,0,y),border=rgb(0.3,0,0.7),col=rgb(0.3,0,0.7,0.2),lwd=2)
dd = 0.03
lines(c(x-dd,x-dd,x),c(0,dd,dd))
text(x/2,y/2,"1",srt=t*180/pi,adj=c(0.5,-0.3))
text(x/2,0,"x",srt=0,adj=c(0.5,1.3))
text(x,y/2,"y",srt=90,adj=c(0.5,1.3))
points(0,0,pch=19)
text(0,0,"(0,0)",adj=c(1.2,1.2))
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/upload_QTI_zip.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/set_quiz_data.py')
reticulate::source_python('~/Documents/chadworley.github.io/a2/tools/put_links_into_agenda.py')
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2html_singles.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
source("~/Documents/chadworley.github.io/a2/u13/exams2canvas_mixed.r", echo=TRUE)
setwd("~/Documents/chadworley.github.io/ml/trig/rotated/blooket")
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
reticulate::source_python('~/Documents/chadworley.github.io/ml/trig/rotated/selenium_test_2.py')
YES
reticulate::source_python('~/Documents/chadworley.github.io/ml/trig/rotated/selenium_test_2.py')
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
source("~/Documents/chadworley.github.io/ml/trig/rotated/blooket/rtt_trig.R", echo=TRUE)
reticulate::repl_python()
